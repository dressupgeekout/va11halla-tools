#!/usr/bin/env ruby
#
# Copyright (c) 2019-2025 Charlotte Koch. All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
# 
#   1. Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimer.
#
#   2.  Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimer in the
#   documentation and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
# IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# =========================================================================
#

require 'optparse'

$LOAD_PATH.unshift File.join(__dir__, "..", "lib")
require 'reader'

########## ########## ########## ##########

PROGNAME = File.basename($0)

scripts_dir = nil
resource_file = nil
colors = !ENV["NO_COLOR"]

parser = OptionParser.new do |opts|
  opts.on("--scripts-dir DIRECTORY") { |path| scripts_dir = File.expand_path(path) }
  opts.on("--no-color", "Plain text output") { colors = false }
end

parser.parse!(ARGV)

if !scripts_dir
  $stderr.puts("#{PROGNAME}: expected a scripts directory")
  $stderr.puts(parser.to_s)
  exit 1
end

if not File.directory?(scripts_dir)
  $stderr.puts("#{PROGNAME}: not a directory: #{scripts_dir}")
  exit 1
end

script = ScriptReader.new(File.join(scripts_dir, "script2.txt"))
script.interpret

script.lines.each do |line|
  $stdout.puts

  line.each do |directive|
    if directive.kind_of?(Instruction)
      next
    elsif directive.kind_of?(Dialogue)
      $stdout.print(directive.text)
    end
  end

  $stdout.print("\t>>")
  $stdout.flush
  $stdin.gets.chomp
end
